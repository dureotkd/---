

UI (User Interface)
- 사용자와 시스템 사이에서 의사소통 할 수 있도록 고안된 물리적 가상매체
- 한마디로 소프트웨어 화면

UX (User experience)
- 제품과 시스템 서비스 등 사용자의 총체적 경험 

UI 유형
- CLI (Command Line Interface) : 정적인 텍스트 기반 (cmd등)

- GUI (Graphical User Interface) : 그래픽 반응 기반 인터페이스 (마우스나 전자팬 이용)

- NUI (Natural User Interface) : 직관적 사용자 반응 인터페이스 (키보드나 마우스 없이 신체부위 사용 목소리,터치 등)

- OUI (Organic User Inteface) : 유기적 상호 작용 (현실에 존재하는 모든 사물이 입출력 장치로 변화)

UI 설계 원칙

(직유학유)
- 직관성
  - 누구나 쉬워야함
- 유연성
  - 오규사항 최대 수용 및 실수 방지
- 학습성
  - 배우기 쉬워야함
- 유효성
  - 완벽하게 목표 달성 (쉬운 오류 처리및 복구)

UI 품질 요구사항

(ISO/IEC 9126)
기신사효유이
기능성 : 차이 분석 , 동작 관찰
신뢰성 : 의도하는 기능 보증
사용성 : 정확하고 쉽게 인지 (3대요소 이학운 > 이해성 학습성 운용성)
효율성 : 얼마나 빨리 처리 할 수 있는가
유지보수성 : 요구사항 개선 및 확장 용이한가
이식성 : 다른 플랫폼(운영체제) 많은 추가 작업 없이 가능한가

UI 화면 설계

와이어프레임 : 이해 관계자들이 화면구성을 협의 화면 단위의 레이아웃을 설계 작업
스토리보드 : 모든 정보가 담겨 있는 설계 산출물
프로토타입 : 동적 효과 적용, 시뮬레이션 할 수 있는 모형 (기능 시험 목적)
목업 : 제품 디자인을 시각적으로 보여줌 (디자인 시험 목적)

UML (Unified Modeling Language) 
- 객체 지향 개발에서 시각화 명세화 문서화 할때 사용되는 표준화된 범용 모델링 언어

UML 특징
(가구명문)
- 가시화 언어 		: 오류 적고 의사소통 용이
- 구축 언어 		: 예측 가능 역변환 등
- 명세화 언어		: 정확한 모델 제시
- 문서화 언어		: 평가 및 의사소통 문서

UML 구성 요소
(사관다)
- 사물(Things)			: 추상적인 개념 , 주제 (명사 또는 동사) 
- 관계(Relationships) 	: 형용사 또는 부사 (연결 관계) 확장
- 다이어그램(Diagrams)  : 사물과 관계를 모아 그림으로 9가지로 정의

UML 다이어그램
- 구조적(정적) 다이어그램 , 행위적(동적) 다이어그램 구분

구조적(정적) 다이어그램
- 클래스 : 정적인 관계 표현
- 객체 : 연관된 모든 인스턴스를 표현
- 컴포넌트 : 컴포넌트와 의존 관계
- 배치 : 컴포넌트의 종속성 , 물리적 위치
- 복합체 구조 : 복합 내부 구조 표현
- 패키지 : 유스케이스나 클래스 모델 요소 그룹화 관계

행위적(동적) 다이어그램
- 유스케이스 : 외부 요소 사용자 관점
- 시컨스 : 시간적 개념 중심 메시지 흐름
- 커뮤니케이션 : 메시지뿐 아니라 객체 간의 연관
- 상태 : 상태가 어떻게 변화하는지
- 활동 : 객체의 처리 로직 조건의 따른 흐름 순서대로
- 타이밍 : 객체 상태 변화와 시간 제약을 명시

클래스간의 관계
(연의일실포집)
연관 (Association) : 서로 개념적 연결
의존 (Dependancy) : 하나의 클래스가 다른 클래스를 사용
일반화 (Generalization) : 일반적인지 구체적인지 표현
실체화 (Realization) : 상속받아 자식 클래스가 추상 메서드 구현시
포함 (Composition) : 집합 관계의 특수한 형태 , 영향 미치는 관계
집합 (Aggregation) : 하나의 객체에 여러 독립적인 객체 구성